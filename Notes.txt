REPROTS:
======================================================================================================================================================

1) Deleted the first 16 rows for all GHCN csv files manually and saved them as <data>.csv
2) Cropped all images to be 256 x 129 and stored in new location. Changed the filename to be yr-month-day-hr-00 
3) Cleaned weather data. Stored only Date/Time and weather columns. Date/Time as index and weather as target.
4) Remove  weather data before 2016-06-05 and after 2017-06-21 (manually)
5) Remove  weather data before 6 am and after 9pm (program)
6) Dropped NaN values for weather labels
7) Merged all weather data
8) Removed the rows for which there was no corresponding picture
9) Manually checked several pictures and compared the associated labels. It seems that the data from YVR and downtown images are correlated. So, I 
   decided not shift or change anything more and start training and testing data.
10) Did the first stage of analyzing images:
    problems faced: 
        1) I had issues with using MultiLabelBinarizer after splitting data into training and testing datasets:
            because of that, y_test an y_train had inconsistent shapes
        2) Using pca(50)  resulted in very low accuracy: less than 10 %
           Using pca(250) resulted in better accuracy: about 20 %
           Using pca(350) resulted again in a very low accuracy: about 10 % 

11) Used single weather labels (first label in multilabl rows) for SVC model: 
        idea --> I am not sure if multilabls are that important in my predictions: it is better to predict and match an image to a single weather label 
        more accurately than using multilabls with poor accuracy. Also, I am not sure how accurately those multilables were produced.
        
        Using pca(350) and C = 1, rbf kernel --> agian got a an accuracy about: 23 %
        Using pca(350) and C = 2 , linear kernel --> got a an accuracy about: 35 %
        Using pca(350) and C = 1e2, linear kernel --> got a an accuracy about: 34 %
        Using pca(350) and C = 1e-3, linear kernel --> agian got a an accuracy about: 34 %
        Using StandardScaler, pca(350) and C = 1, linear kernel --> agian got a an accuracy about: 36 %


12) Since having too many labels would result in poor predictions, I decided to reduce the number of labels to only : Clear, Cloudy, Rain, and Snow.
    So, I went back to cleaning data and modifed clean_data.py and merge_weather_data.py to incroporate these changes.

13) Analyzed 4-labels dataset:
        Using StandardScaler, pca(350) and C = 1, linear kernel --> 63 %  (yeaaah!)
        Using StandardScaler, pca(350) and C = 1e-2, linear kernel --> 68 % 
        Using StandardScaler, pca(500) and C = 1e-2, linear kernel --> 68 % 
        Using pca(500) and KNeighborsClassifier with n=9 --> 66 % 
        Using pca(500) and KNeighborsClassifier with n=11 --> 64 % 
        Using pca(500) and KNeighborsClassifier with n=7 --> 66 % 
        Using pca(500) and GaussianNB --> 40 %


14) Repeat step 13 for uncropped images:   (Same resutls ==> use cropped images for further steps of analysis/representation)
    Analyzed 4-labels dataset:
        Using StandardScaler, pca(500) and C = 1e-2, linear kernel --> 70 % 
        Using pca(500) and KNeighborsClassifier with n=7 --> 67 % 
        Using pca(500) and GaussianNB --> 40.5 % 

15) Use the best classifier from step 13 (make_third_model in the code) and find how the classifier prediction worked for each of 4 different labels
    It is a good analysis to see what kind of weather is easier/harder to predict from pictures


NOTES:
======================================================================================================================================================

* GHCN data has been taken HOURLY 
    from 2016-06-01 00:00  to  2017-06-30 23:00  ==> drop the rows before 6 am and after 9pm (program)
                                                     drop data before 2016-06-05 (manually)
                                                     drop data after 2017-06-21  (manually)
* Webcam data has been taken HOURLY
    from 2016-06-05 06:00  to  2017-06-21 21:00  

* take Date/Time and Weather columns from GHCN data:
    Date/Time as index 
    Weather as target for analysis steps

